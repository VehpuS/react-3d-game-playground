{"version":3,"sources":["Objects/Box.tsx","Objects/Ground.tsx","World/GlobalLights.tsx","App.tsx","index.tsx"],"names":["Box","useBox","mass","position","rotation","Math","random","PI","ref","api","onClick","velocity","set","attach","color","groundRotation","Ground","usePlane","args","GlobalLights","intensity","angle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAIaA,EAAM,WAAO,IAAD,EACFC,aAAO,iBAAO,CAC7BC,KAAM,GACNC,SAAU,CAAC,EAAG,EAAG,GACjBC,SAAU,CAAyB,GAAvBC,KAAKC,SAAW,IAAWD,KAAKE,GAA4B,GAAvBF,KAAKC,SAAW,IAAWD,KAAKE,GAA4B,GAAvBF,KAAKC,SAAW,IAAWD,KAAKE,QAJrG,mBACdC,EADc,KACTC,EADS,KAOrB,OAAO,uBAAMD,IAAKA,EAAKE,QAAS,WAC5BD,EAAIE,SAASC,IAA4B,GAAvBP,KAAKC,SAAW,IAAU,EAA2B,GAAvBD,KAAKC,SAAW,MAD7D,UAGH,mCAAmBO,OAAO,aAC1B,qCAAqBA,OAAO,WAAWC,MAAM,kB,QCX/CC,EAAwC,EAAEV,KAAKE,GAAK,EAAG,EAAG,GAEnDS,EAAS,WAAO,IAAD,EACVC,aAAS,iBAAO,CAAEb,SAAUW,EAA4BZ,SAAU,CAAC,GAAI,IAAK,OAAnFK,EADiB,oBAGxB,OAAO,uBAAMA,IAAKA,EAAX,UACH,qCAAqBK,OAAO,WAAWK,KAAM,CAAC,IAAK,OACnD,qCAAqBL,OAAO,WAAWC,MAAM,cCTxCK,EAAe,WACxB,OAAO,qCACH,8BAAcC,UAAW,KACzB,2BAAWjB,SAAU,CAAC,GAAI,GAAI,IAAKkB,MAAO,SCiBnCC,MAdf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,WCXRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e5acddee.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { useBox } from \"use-cannon\";\n\nexport const Box = () => {\n    const [ref, api] = useBox(() => ({\n        mass: 0.1,\n        position: [0, 4, 0],\n        rotation: [(Math.random() - 0.5) * 4 * Math.PI, (Math.random() - 0.5) * 4 * Math.PI, (Math.random() - 0.5) * 4 * Math.PI],\n    }));\n\n    return <mesh ref={ref} onClick={() => {\n        api.velocity.set((Math.random() - 0.5) * 6, 3, (Math.random() - 0.5) * 6)\n    }}>\n        <boxBufferGeometry attach=\"geometry\" />\n        <meshLambertMaterial attach=\"material\" color=\"royalblue\" />\n    </mesh>;\n}","import React from \"react\";\nimport { MeshProps } from \"react-three-fiber\";\nimport { usePlane } from \"use-cannon\";\n\nconst groundRotation: MeshProps[\"rotation\"] = [-Math.PI / 2, 0, 0];\n\nexport const Ground = () => {\n    const [ref] = usePlane(() => ({ rotation: groundRotation as number[], position: [0, -2.5, 0] }));\n\n    return <mesh ref={ref}>\n        <planeBufferGeometry attach=\"geometry\" args={[200, 200]} />\n        <meshLambertMaterial attach=\"material\" color=\"green\" />\n    </mesh >;\n}","import React from \"react\";\n\nexport const GlobalLights = () => {\n    return <>\n        <ambientLight intensity={0.5} />\n        <spotLight position={[10, 20, 30]} angle={0.3} />\n    </>;\n}","import React from 'react';\nimport { Canvas } from \"react-three-fiber\";\nimport { Box } from \"./Objects/Box\";\nimport { OrbitControls, Stars } from \"drei\";\nimport { Ground } from \"./Objects/Ground\";\nimport { Physics } from \"use-cannon\";\nimport { GlobalLights } from \"./World/GlobalLights\";\n\nfunction App() {\n  return (\n    <Canvas>\n      <OrbitControls />\n      <Stars />\n      <GlobalLights />\n      <Physics>\n        <Box />\n        <Ground />\n      </Physics>\n    </Canvas>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}